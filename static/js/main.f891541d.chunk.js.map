{"version":3,"sources":["helpers.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["findById","a","b","id","addId","arr","ids","map","item","Math","max","UserInfo","user","className","href","email","name","TodoInfo","todo","completed","title","cn","TodoList","todos","username","userId","usersFromServer","find","App","useState","todosList","setTodosList","setTitle","selectedUserId","setSelectedUserId","isTitleEmpty","setIsTitleEmpty","isIdSelected","setIsIdSelected","newTodo","action","method","onSubmit","e","preventDefault","prevTodosList","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f891541d.chunk.js","sourcesContent":["type WithId = {\n  id: number\n};\n\nexport const findById = <T extends WithId>(a: number) => {\n  return (b: T) => a === b.id;\n};\n\nexport const addId = (arr: { id: number }[]): number => {\n  const ids = arr.map(item => item.id);\n  const maxId = Math.max(...ids);\n\n  return maxId + 1;\n};\n","import { FC } from 'react';\nimport { User } from '../../types/types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todos } from '../../types/types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo\n          key={user.id}\n          user={user}\n        />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todos } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todos) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { findById, addId } from './helpers';\nimport { User, Todos } from './types/types';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst todos = todosFromServer.map(todo => {\n  const user = usersFromServer.find(\n    findById<User>(todo.userId),\n  ) || null;\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todos[]>(todos);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isIdSelected, setIsIdSelected] = useState(false);\n\n  const newTodo: Todos = {\n    id: addId(todosList),\n    title,\n    completed: false,\n    userId: selectedUserId,\n    user: usersFromServer.find(\n      findById<User>(selectedUserId),\n    ) || null,\n  };\n\n  const handleValidation = () => {\n    setIsTitleEmpty(!title);\n    setIsIdSelected(!selectedUserId);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    handleValidation();\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    setTodosList(prevTodosList => [...prevTodosList, newTodo]);\n    clearForm();\n  };\n\n  const handleInputTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsTitleEmpty(false);\n  };\n\n  const handleSelectUserId = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+e.target.value);\n    setIsIdSelected(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleInputTitle}\n            />\n          </label>\n          {isTitleEmpty\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleSelectUserId}\n            >\n              <option value={0} disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isIdSelected\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}